# Garage Door Example - https://esphome.io/cookbook/garage-door
# Control a garage door which uses a momentary-button (like a doorbell)

substitutions:
  # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: shop_door
  friendly_name: Shop Door
  button_delay: 150ms
  ip_address: !secret garage_door_ip

esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret ssidG
  password: !secret passwdG
    
  manual_ip:
    static_ip: ${ip_address}
    gateway: !secret lan_gateway
    subnet: !secret lan_subnet
    dns1: !secret lan_dns1

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_uname
  password: !secret mqtt_pw
  topic_prefix: "garage"
  id: "door1"
    
logger:
  # https://esphome.io/components/logger

#api:
#  password: !secret esphome_api_password
  # https://esphome.io/components/api

ota:

web_server:
  port: 80

sensor:
  - platform: wifi_signal
    name: $friendly_name WiFi Signal
    update_interval: 60s
    
  - platform: uptime
    name: $friendly_name Uptime

  - platform: dht
    model: AM2302
    pin: D5
    temperature:
      name: "Garage Temperature"
    humidity:
      name: "Garage Humidity"
    update_interval: 50s

binary_sensor:
  - platform: status
    name: $friendly_name status

  - platform: gpio
    pin:
      number: D2
      mode: INPUT_PULLUP
      inverted: False
    id: shop_door_sensor
    name: $friendly_name Sensor
    device_class: garage_door
      
switch:
  - platform: gpio
    id: relay
    name: $friendly_name Switch
    pin:
      number: GPIO5
      inverted: False
    restore_mode: ALWAYS_OFF
  
  - platform: restart
    name: $friendly_name Reboot
    
cover:
  - platform: template
    id: shop_door
    name: $friendly_name
    lambda: !lambda |-
      if (id(shop_door_sensor).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    optimistic: false
    assumed_state: true
    open_action:
      - switch.turn_off: relay
      - switch.turn_on: relay
      - delay: 0.5s
      - switch.turn_off: relay
      # cover.stop to set "Current Operation" to IDLE
      - cover.stop: shop_door
    close_action:
      - switch.turn_off: relay
      - switch.turn_on: relay
      - delay: 0.5s
      - switch.turn_off: relay
      # cover.stop to set "Current Operation" to IDLE
      - cover.stop: shop_door
    stop_action:
      - switch.turn_off: relay

